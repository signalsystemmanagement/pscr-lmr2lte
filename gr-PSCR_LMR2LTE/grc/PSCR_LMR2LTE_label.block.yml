id: PSCR_LMR2LTE_label
label: label
category: '[PSCR_LMR2LTE]'

templates:
  imports: from gnuradio import PSCR_LMR2LTE
  make: PSCR_LMR2LTE.label()

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
-   id: label
    label: Label
    dtype: string
    default: '""'
    hide: ${ ('none' if len(label) > 0 else 'part') }
-   id: cellalignment
    label: Cell Alignment
    dtype: enum
    default: '1'
    options: ['1','2','3']
    option_labels: ['Center','Left','Right']
    hide: part
-   id: verticalalignment
    label: Vertical Alignment
    dtype: enum
    default: '1'
    options: ['1','2','3']
    option_labels: ['Center','Top','Bottom']
    hide: part
-   id: gui_hint
    label: GUI Hint
    dtype: gui_hint
    hide: part

inputs:
-   domain: message
    id: label
    optional: true

templates:
    imports: import PSCR_LMR2LTE
    make: |-
        <%
            win = 'self._%s_win'%id
        %>\
        ${win} = PSCR_LMR2LTE.label("${id}", ${label}, ${cellalignment}, ${verticalalignment}, self)
        self.${id} = ${win}
        ${gui_hint() % win}

documentation: |-
    This block makes a basic label
    It can be controlled with a message pair
    The car of the message must match the block id or the alias and the cdr supplies the label

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
